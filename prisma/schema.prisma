generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id               String    @id @default(uuid())
  displayName      String
  email            String    @unique
  emailConfirmedAt DateTime?
  phone            String?
  password         String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  deletedAt DateTime?

  defaultOrganisationId String?
  defaultOrganisation   Organisation? @relation("DefaultOrg", references: [id], fields: [defaultOrganisationId])

  sessions    Session[]
  createdOrgs Organisation[]       @relation("OrgCreator")
  memberships OrganisationMember[] @relation("UserMemberships")

  @@index([defaultOrganisationId])
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  refreshedAt DateTime?
  userAgent   String
  ipAddress   String

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Organisation {
  id   String @id @default(uuid())
  name String

  businessType    BusinessType     @default(individual)
  businessProfile BusinessProfile?

  creatorId String
  creator   User   @relation("OrgCreator", fields: [creatorId], references: [id])

  defaultUsers User[] @relation("DefaultOrg")

  members OrganisationMember[] @relation("OrganisationMembers")

  @@index([creatorId])
}

model OrganisationMember {
  id String @id @default(uuid())

  userId String
  orgId  String

  user         User         @relation("UserMemberships", fields: [userId], references: [id])
  organisation Organisation @relation("OrganisationMembers", fields: [orgId], references: [id])

  @@index([userId, orgId])
}

enum BusinessType {
  individual
  organisation
}

model BusinessProfile {
  id String @id @default(uuid())

  organisationName String
  firstName        String
  lastName         String
  websiteUrl       String?
  emailAddress     String

  addressLine1 String
  addressLine2 String?
  postalCode   String
  city         String
  state        String
  country      String

  orgId        String       @unique
  organisation Organisation @relation(references: [id], fields: [orgId])
}
